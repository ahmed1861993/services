{"version":3,"sources":["task/Todoitems/Todoitems.js","task/Additems/Additems.js","task/Home/style.js","task/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["TodoItems","props","items","deleteItem","ListItems","length","map","item","react_default","a","createElement","key","id","className","name","onClick","AddItems","state","age","handleChange","e","_this","setState","Object","defineProperty","target","value","handlesubmit","preventDefault","onSubmit","this","type","placeholder","onChange","Component","HomeSection","styled","div","_templateObject","Home","App","i","findIndex","splice","Math","random","push","task_Home_Home","Additems_Additems","Todoitems","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2379c55.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst TodoItems= (props) => {\r\n    const {items,deleteItem} = props;\r\n    let length=items.length;\r\n    const ListItems =length ? (\r\n    \r\n    items.map(item => {\r\n        return(\r\n            <div key={item.id}>\r\n             <span className=\"name\">Service Title</span>\r\n            <span className=\"name\">{item.name}</span>\r\n           \r\n         \r\n            <span className=\"action icon\" onClick={()=> deleteItem(item.id)}>&times;</span>\r\n            </div>\r\n        )\r\n    })\r\n    ) : (\r\n        <p>There is no Services to show</p>\r\n    )\r\nreturn(\r\n    <div className=\"container ListItems\">\r\n        <div>\r\n           \r\n           \r\n          \r\n        </div>\r\n\r\n       {ListItems}\r\n    </div> \r\n)\r\n}\r\n\r\nexport default TodoItems\r\n","import React,{Component} from 'react';\r\nimport './Additems.css'\r\nclass AddItems extends Component{\r\n    state={\r\n        name: \"\",\r\n        age: \"\"\r\n    }\r\n    handleChange=(e)=>{\r\n      this.setState({\r\n        [e.target.id] :  e.target.value\r\n      })\r\n    }\r\n    handlesubmit = (e)=>{\r\n        e.preventDefault();\r\n       if(e.target.name.value === ''){\r\n       return false;\r\n       }else{\r\n        this.props.AddItems(this.state)\r\n        this.setState({\r\n            name:\"\",\r\n            age:\"\"\r\n        })\r\n       }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n              \r\n               <form onSubmit={this.handlesubmit}>\r\n                  <input type=\"text\" placeholder=\"Service Title\" id=\"name\" onChange={this.handleChange} value={this.state.name}/>\r\n                 \r\n                  <input type=\"submit\" value=\"Add\"/>\r\n               </form>\r\n            </div>\r\n        )\r\n    }\r\n       \r\n   \r\n}\r\n\r\nexport default AddItems;","\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport const HomeSection = styled.div`\r\n\r\n{\r\n    width:100%;\r\n    height: 700px;\r\n   background-image: url('header.png');\r\n   background-size: cover;\r\n   margin-bottom: 50px;\r\n  }\r\n\r\n\r\n `\r\n\r\n\r\n\r\n\r\n\r\n","import React,{Component} from 'react';\r\nimport { HomeSection } from './style.js';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Home= () => {\r\n   return(\r\n       <HomeSection>\r\n        <div className=\"Nav\">\r\n        <div className=\"container\">\r\n        <div className=\"logo\">\r\n      \r\n         <h2><span className=\"letter\">TRUE</span> CONCEPT</h2>\r\n        </div>\r\n         <ul>\r\n        \r\n        \r\n             <li>Service</li>\r\n             <li>About Us</li>\r\n             <li>Contact</li>\r\n         </ul>\r\n         </div>\r\n        </div>\r\n       <div className=\"Data container\">\r\n       <div className=\" rightSide \">\r\n            <h3>Strategy Mentoring Workshop</h3>\r\n            <p>Strategy Mentoring WorkshopStrategy Mentoring WorkshopStrategy Mentoring WorkshopStrategy Mentoring Workshop lorem Mentoring Workshop loremMentoring Workshop loremMentoring Workshop loremMentoring Workshop loremMentoring Workshop loremMentoring Workshop loremMentoring Workshop loremMentoring Workshop lorem</p>\r\n     <button>Build Your Strategy Today</button>\r\n       </div>\r\n        <div className=\"  leftSide \">\r\n        <p>WE </p>\r\n        <h4>ENLIGHT</h4>\r\n        <h3>CORPORATE</h3>\r\n        <h3>FUTURE</h3>\r\n        </div>\r\n       </div>\r\n      </HomeSection>\r\n   )\r\n\r\n}\r\n\r\n\r\nexport default Home;","import React,{Component} from 'react';\nimport TodoItems from './task/Todoitems/Todoitems'\nimport AddItems from './task/Additems/Additems'\nimport Home from './task/Home/Home'\nimport {BrowserRouter , Route} from 'react-router-dom';\nimport styled from 'styled-components';\nimport './index.css';\n\nclass App extends Component{\n  state = {\n    items : [\n      \n    ]\n  }\n  deleteItem =  (id) =>{\nlet items=this.state.items;\nlet i =items.findIndex(item => item.id === id)\nitems.splice(i,1)\nthis.setState({items})\n  }\n  AddItems=(item) =>{\n    item.id = Math.random();\n    let items=this.state.items;\n    items.push(item);\n    this.setState({items})\n  };\n  render(){\n    return (\n\n      \n      <div className=\"App \">\n\n      <Home/>\n     \n      <div className=\"container\">\n     <h1 className=\"text-center\">We Help Throuth</h1>\n     <AddItems AddItems={this.AddItems}/>\n       <TodoItems items={this.state.items} deleteItem={this.deleteItem}/>\n       </div>\n\n\n       \n      </div>\n    );\n  }\n} \n\n \n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import 'bootstrap/dist/css/bootstrap.css';\n// import 'bootstrap/dist/js/bootstrap.js';\n// import {popper} from 'popper' ;\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}